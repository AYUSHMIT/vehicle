-- WARNING: This file was generated automatically by Vehicle
-- and should not be modified manually!
-- Metadata
--  - Agda version: 2.6.2
--  - AISEC version: 0.1.0.1
--  - Time generated: ???

{-# OPTIONS --allow-exec #-}

open import Vehicle
open import Vehicle.Data.Tensor
open import Data.Product
open import Data.Integer as ℤ using (ℤ)
open import Data.Rational as ℚ using (ℚ)
open import Data.Fin as Fin using (#_)
open import Data.List

module windController-output where

private
  VEHICLE_PROJECT_FILE = "TODO_projectFile"

InputVector : Set
InputVector = Tensor ℚ (2 ∷ [])

deltaV : InputVector → ℚ
deltaV = evaluate record
  { projectFile = VEHICLE_PROJECT_FILE
  ; networkUUID = "TODO_networkUUID"
  }

currentPosition : InputVector → ℚ
currentPosition x = x (# 0)

prevPosition : InputVector → ℚ
prevPosition x = x (# 1)

SafeInput : InputVector → Set
SafeInput x = ℚ.- (ℤ.+ 3 ℚ./ 1) ℚ.≤ currentPosition x × currentPosition x ℚ.≤ ℤ.+ 3 ℚ./ 1

SafeOutput : InputVector → Set
SafeOutput x = ℚ.- (ℤ.+ 2 ℚ./ 1) ℚ.< (deltaV x ℚ.+ (ℤ.+ 2 ℚ./ 1) ℚ.* currentPosition x) ℚ.- prevPosition x × (deltaV x ℚ.+ (ℤ.+ 2 ℚ./ 1) ℚ.* currentPosition x) ℚ.- prevPosition x ℚ.< ℤ.+ 2 ℚ./ 1

abstract
  safe : ∀ (x : Tensor ℚ (2 ∷ [])) → SafeInput x → SafeOutput x
  safe = checkProperty record
    { projectFile  = VEHICLE_PROJECT_FILE
    ; propertyUUID = "TODO_propertyUUID"
    }